@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 255, 255, 255;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 255, 255, 255;
    --background-end-rgb: 0, 0, 0;
  }
}

@layer base {
  html {
    color-scheme: light !important;
  }
}


body {
  color: rgb(var(--foreground-rgb));
  background:
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

.login-button {
  background-color: #8fbee9;
  color: white;
  font-weight: bold;
  padding: 8px 16px;
  border-radius: 4px;
}

.login-button:hover {
  background-color: #1d4ed8;
}

.official-color {

  background-color: rgb(143, 190, 233);
  /* RGB 값으로 배경 색상 설정 */

  background-color: #8fbee9;
  /* RGB 값으로 배경 색상 설정 */

}


.text-official-color {
  color: rgb(143, 190, 233);
  /* RGB 값으로 텍스트 색상 설정 */
}


.mail-hover:hover {
  border: solid 2px rgb(143, 190, 233);
  border-radius: 5px;
}

.hamburger {
  display: inline-block;
  cursor: pointer;
  background: transparent;
  border: none;
  padding: 0.625rem;
}

.hamburger span {
  display: block;
  width: 1.5625rem;
  /* 줄의 너비 */
  height: 0.1875rem;
  /* 줄의 높이 */
  margin: 0.3125rem auto;
  background-color: white;
  /* 줄의 색상 */
  transition: all 0.3s ease;
  /* 애니메이션 효과 */
  border-radius: 0.09375rem;
}

.hamburger1 {
  display: inline-block;
  cursor: pointer;
  background: transparent;
  border: none;
  padding: 0.625rem;
}

.hamburger1:hover {
  background-color: #e0e0e0;

}

.hamburger1 span {
  display: block;
  width: 1.5625rem;
  /* 줄의 너비 */
  height: 0.1875rem;
  /* 줄의 높이 */
  margin: 0.3125rem auto;
  background-color: black;
  /* 줄의 색상 */
  transition: all 0.3s ease;
  /* 애니메이션 효과 */
  border-radius: 0.09375rem;
}

.send {
  background-color: white;
}

.send:hover {
  background-color: #e0e0e0;

}

.mail-hamburger {
  display: inline-block;
  cursor: pointer;
  background: transparent;
  border: none;
  /* padding: 10px; */
  margin-right: 0.1875rem;
  width: 1.875rem;
}

.mail-hamburger span {
  display: block;
  width: 0.125rem;
  /* 줄의 너비 */
  height: 0.125rem;
  /* 줄의 높이 */
  margin: 0.3125rem auto;
  background-color: black;
  /* 줄의 색상 */
  transition: all 0.3s ease;
  /* 애니메이션 효과 */
  border-radius: 0.09375rem;
}

.notification-content {
  cursor: pointer;
  padding: 10px;
  background-color: #abcdae;
  margin: 10px;
  position: relative;
  width: 90%;
  overflow: hidden;
  transition: max-height 0.3s ease-in-out;
}

.collapsed {
  max-height: 3.375rem; /* Initial height when collapsed */
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.expanded {
  max-height: 10rem; /* Enough height to show full content or adjust as needed */
}


@layer components {
  .checkbox-div:has(input:checked) {
    @apply border-2 border-[#8fbee9] group-hover:bg-[#dce2e8];
  }


  checkbox {
    @apply focus:outline-none
  }

  .layout-fix-x {
    @apply SD:SD-x HD:HD-x FHD:FHD-x QHD:QHD-x UHD:UHD-x LAP_16:LAP_16-x
  }

  .layout-fix-y {
    @apply SD:SD-y HD:HD-y FHD:FHD-y QHD:QHD-y UHD:UHD-y LAP_16:LAP_16-y
  }

  .layout-fix {
    @apply SD:SD HD:HD FHD:FHD QHD:QHD UHD:UHD LAP_16:LAP_16
  }

  .SD-x {
    @apply w-[640px] min-w-[640px]
  }

  .SD-y {
    @apply h-[353px] min-h-[353px]
  }

  .SD {
    @apply SD-x SD-y text-[8px]
  }

  .HD-x {
    @apply w-[1280px] min-w-[1280px]
  }

  .HD-y {
    @apply h-[593px] min-h-[593px]
  }

  .HD {
    @apply HD-x HD-y text-[12px]
  }

  .FHD-x {
    @apply w-[1920px] min-w-[1920px]
  }

  .FHD-y {
    @apply h-[953px] min-h-[953px]
  }

  .FHD {
    @apply FHD-x FHD-y text-[16px]
  }

  .QHD-x{
    @apply w-[2560px] min-w-[2560px]
  }
  .QHD-y{
    @apply h-[1313px] min-h-[1313px]
  }
  .QHD{
    @apply QHD-x QHD-y text-[24px]
  }
  .UHD-x{
    @apply w-[3840px] min-w-[3840px]
  }
  .UHD-y{
    @apply h-[2033px] min-h-[2033px]
  }
  .UHD{
    @apply UHD-x UHD-y text-[32px]
  }
  .LAP_16-x{
    @apply w-[2880px] min-w-[2880px]
  }
  .LAP_16-y{
    @apply h-[1673px] min-h-[1673px]
  }
  .LAP_16{
    @apply LAP_16-x LAP_16-y text-[28px]
  }
}

.truncate {
  display: inline-block;
  /* Ensure it takes the width of its content */
  width: 5em;
  /* Set the width to a value that fits 5 characters */
  overflow: hidden;
  /* Hide overflow content */
  text-overflow: ellipsis;
  /* Show ... when text overflows */
  white-space: nowrap;
  /* Prevent line breaks */
  text-align: center;
  /* Center the text within the element */
}